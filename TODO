Planned for the next release in 2.0 branch:

 [Mandatory]
 * Using a QSplitter on the ingredient matcher dialog.
 * Preferences dialog allow the removal of gradients in the left panel.
 * Improved sqlite migration code.
 * Restored options about formatting in in preferences dialog.
 * Solve the issues reported by krazy.
 * Check that FIXME's and TODO's in source code.
 * Fix bugs.
 * Update user manual, specially the screenshots and fix the issues reported by
   krazy.

 [Brainstorming]
 * Fix the hidden features: merge similar (categories|ingredients).
 * Make configurable the length of VARCHAR(%n) fields, for instance, the
   preparation method name.
 * Some set-up to make the sample recipes translatable by kde i18n teams,
   something like krecipesdata2pot and po2krecipesdata... (ask Pino or someone
   from i18n team before coding these programs)
 * Simple command line interface to import recipes and restore databases.
 * Check the info_db table; database version should be stored as varchar
   instead of float and "generated by" seems to be outdated.
 * Try apidox.

Planned for the 2.1 branch:

 [Mandatory]
 * Remove Q3 support stuff (a huge work).

 [Brainstorming]
 * Test with large databases.
 * Concurrent database access.

Planned for 2.2 branch:

 [Brainstorming]
 * Secure database access passwords?
 * Use qt designer?
 * Add comments to preparation methods and ingredients in a recipe? (see the
   Bill's usecase).
 * Nepomuk support?
 * GHNS for recipes layout?
 * Tags for recipes?
 * Check ratings widget. Check what uses dolphin for those stars to rate files.
 * Trash folder to store removed recipes?
_______________________________________________________________________________
Old stuff from previous maintainers:

1.0:
 -An awesome new layout
 -Notice of Qt >= 3.2 and < 4.0

jkivlighn:

MAJOR FEATURES:
	*Calendar for meal planning
	*Command-line interface
	*Improved printing support: I'd like to allow, for example, printing on recipe cards.
	*Handle "Cookbooks".  In MySQL/PostgreSQL a cookbook would be a table, and in SQLite it would be a file.
	*Recipe revisions (planned for 1.1)

CONVENIENCES/MINOR FEATURES:
	*Improved navigation - add a forward and back button
	*E-mail recipe(s) option (using kapp->invokeMailer())
	*Give option to import recipe formats by pasting the recipe text into a widget
	*Allow saving and loading diet info from a file (or just store it in the database?)
	*Database maintenance options (Empty database, Remove unused elements, etc.)
	*Configurable shopping list (Maybe allow the user to select a style sheet or add a section to settings dialog... or both)

BUGS/OTHER:
	*Let user know when no layout file was found
	*The icons on the left menu at times will disappear... I can't seem to reproduce this, however
	*Make use of transactions in database backends where appropriate
	*Give a warning when deleting categories (such as when a recipe was a part of that category)
	*Delete the database table when deleting Krecipes
	*Give a message box when exporting recipes, letting the user know what they are exporting (Is it the whole database, just what is visible, or a specific recipe)... Make it a "Don't ask me again" dialog.

THOUGHTS (feel free to comment):
	*Recipe copy
	*Reference a recipe to a cookbook (title, page number, category, etc.)

uga:
(I don't claim ownership of these. If you do it, I'll be happy too :) )

planned for 0.8:
	*Step-by-Step recipe instructions with photos
	*Check ingredients from existing kitchen resource table?
	*Add an option to popup for newly created ingredients, and include the USDA nutritional info at the same time
	

